<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:Views"
                    xmlns:attachs="clr-namespace:UI.AttachProperties"
                    xmlns:local="clr-namespace:BMIApp.Resources">


    
    
    <Style x:Key="OuterWindowBorderStyle" TargetType="{x:Type Border}" >
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    
    <Style TargetType="{x:Type views:BaseWindow}"  
            x:Key="WindowStyle"
            BasedOn="{StaticResource {x:Type Window}}" >
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="FontFamily" Value ="{StaticResource FontAwesome }"/>
        <Setter Property="FontSize"   Value ="{StaticResource DefaultFontSize}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="WindowState" Value="Normal"/>
        <Setter Property="Title" Value="{Binding Title}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type views:BaseWindow}">
                    <Border 
                        x:Name="OutterWindowBorder"
                        BorderBrush="Transparent"
                        Background="Transparent"
                        Padding="5"
                        CornerRadius="15"
                        BorderThickness="{TemplateBinding BorderThickness}"                       
                        Style="{StaticResource OuterWindowBorderStyle}">

                       
                        <Border  BorderBrush="{TemplateBinding BorderBrush}" 
                              CornerRadius="15"
                              Background="{TemplateBinding Background}"
                              Opacity="{TemplateBinding Opacity}"
                              Padding="0"
                              Margin ="0">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1"  Direction="180"/>
                            </Border.Effect>

                            <ContentPresenter   VerticalAlignment="Stretch"/>
                        </Border>
                        
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Window.IsMouseOver" Value="True">
                            <Setter Property="BorderThickness"   Value= "{Binding BorderThickness}"  />
                        </Trigger>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                         Duration="0:0:0.8000"                                       
                                         To="1"/>
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key= "ButtonStyle">
        <Setter Property="Background" Value="{StaticResource  ButtonBackgroundColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource  ButtonBackgroundTextColorBrush}"/>
        <Setter Property="FontSize"   Value="12"/>
        <Setter Property="FontWeight"   Value="Light"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0"/>

        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Padding="{TemplateBinding Padding}"
                             Margin="{TemplateBinding Margin}"
                             Width="{TemplateBinding Width}"
                             Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentControl Content="{TemplateBinding Content}"
                                            HorizontalContentAlignment ="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment   ="{TemplateBinding VerticalContentAlignment}"
                                            VerticalAlignment          ="{TemplateBinding VerticalAlignment}"
                                            HorizontalAlignment        ="{TemplateBinding HorizontalAlignment}"
                                            Foreground                 ="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">

        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="Margin"    Value="0"></Setter>
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryColorBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="5"
                                Padding="0" 
                                Width="Auto"
                                Height="Auto"
                               >

                            <Grid>
                                <Label 
                                       Padding="{TemplateBinding Padding}"
                                       x:Name="lblTextLabel"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       BorderBrush="{StaticResource BackgroundLightColorBrush}"
                                       BorderThickness="0 0 1 0"
                                      
                                       Grid.Column="0"/>
                                <ScrollViewer Margin="0" 
                                             x:Name="PART_ContentHost" 
                                             Padding="{TemplateBinding Padding}"
                                             FontSize="{TemplateBinding FontSize}"
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             Background="{TemplateBinding Background}"
                                             Grid.Column="1"/>
                            </Grid>

                        </Border>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BackgroundLightColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryLightColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PushButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryDarkColorBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            x:Name="BorderImage"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="5"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            BorderThickness="1">

                        <ContentPresenter 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                    Duration="0:00:0.300" To="{StaticResource SecondaryColor}" />
                                    <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                    Duration="0:00:0.300" To="{StaticResource SecondaryTextColor}" />

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                    Duration="0:00:0.300" To="Transparent" />

                                    <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                    Duration="0:00:0.300" To="{StaticResource BackgroundTextColor}" />


                                </Storyboard>

                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BackgroundLightColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource  SecondaryLightColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource  BackgroundTextColorBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style TargetType="{x:Type Button }" BasedOn="{ StaticResource ButtonStyle}" x:Key="NavigationButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"  
                            Padding="{TemplateBinding Padding}"
                            Height="{Binding RelativeSource={RelativeSource Self}, Path= Width}"
                           >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="*"/>
                                <RowDefinition  Height="Auto" />
                            </Grid.RowDefinitions>

                            <Viewbox   Grid.Row="0">
                                <Border CornerRadius="100" Padding="1" >
                                    <TextBlock  
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Width="{TemplateBinding Width}"
                                    FontFamily="{StaticResource FontAwesome}"
                                    
                                     />
                                </Border>
                            </Viewbox>
                            <TextBlock
                                Grid.Row="1"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Padding="0 5 0 0"
                                FontWeight="{TemplateBinding FontWeight}"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{TemplateBinding Content}"  />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                      

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"  />
                            </MultiTrigger.Conditions>


                            <MultiTrigger.Setters>
                                <Setter Property="Cursor"     Value="Hand"/>
                            </MultiTrigger.Setters>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                     
                                        <DoubleAnimation    Duration="0:0:0.3000"
                                                        Storyboard.TargetProperty="FontSize"
                                                        To="15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        
                                        <DoubleAnimation    Duration="0:0:0.3000"
                                                        Storyboard.TargetProperty="FontSize"
                                                        To="11"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="WindowButtonsStyle" TargetType="{x:Type Button}"  >
        <Setter Property="Background" Value="{StaticResource BackgroundDarkColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path= Width}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border 
                        Margin="{TemplateBinding Margin}"
                        CornerRadius="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}"                            
                        Background="{TemplateBinding Background}" >

                        <ContentControl Content="{TemplateBinding Content}" 
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment  ="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Arrow"/>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontSize" Value="21"/>
            </Trigger>

            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        Duration="0:0:0.100"
                                        To="{StaticResource BackgroundColor}"/>
                        <DoubleAnimation Storyboard.TargetProperty="FontSize"  Duration="0:0:0.100" To="15"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        Duration="0:0:0.100"
                                        To="{StaticResource BackgroundDarkColor}"/>
                        <DoubleAnimation Storyboard.TargetProperty="FontSize"  Duration="0:0:0.100" To="12" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    

    <Style TargetType="{x:Type Grid}" x:Key="ToolbarStyle">
        <Setter Property="Background"  Value="{StaticResource BackgroundColorBrush}" />


    </Style>

    <Style TargetType="{x:Type StackPanel}" x:Key="DashboardStyle">

    </Style>

</ResourceDictionary>